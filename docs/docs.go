// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/weapons": {
            "get": {
                "tags": [
                    "weapons"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "атака. пример: [мин],[макс]",
                        "name": "attack",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "масса. пример: [мин],[макс]",
                        "name": "weight",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "сортировать по. пример: [имя поля],[asc/desc]",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "ограничение",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "смещение",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.AllWeaponsDTO"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "weapons"
                ],
                "parameters": [
                    {
                        "description": "оружие",
                        "name": "weapon",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.WeaponDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/weapons/{id}": {
            "delete": {
                "tags": [
                    "weapons"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "идентификатор оружия",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "tags": [
                    "weapons"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "идентификатор оружия",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "оружие",
                        "name": "weapon",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.WeaponDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "entities.AllWeaponsDTO": {
            "type": "object",
            "properties": {
                "maxAttack": {
                    "type": "number"
                },
                "maxWeight": {
                    "type": "number"
                },
                "minAttack": {
                    "type": "number"
                },
                "minWeight": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "weapons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Weapon"
                    }
                }
            }
        },
        "entities.Weapon": {
            "type": "object",
            "properties": {
                "attack": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "weight": {
                    "type": "number"
                }
            }
        },
        "entities.WeaponDTO": {
            "type": "object",
            "properties": {
                "attack": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "weight": {
                    "type": "number"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
